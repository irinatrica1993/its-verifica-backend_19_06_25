// Schema Prisma per l'applicazione di gestione eventi

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Modello User basato sulla collezione nel database MongoDB
model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  email     String      @unique
  nome      String?     // Opzionale per compatibilità con dati esistenti
  cognome   String?     // Opzionale per compatibilità con dati esistenti
  password  String
  role      String      @default("user") // Valori: "user" (dipendente), "admin" (organizzatore/amministratore)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  iscrizioni Iscrizione[] // Relazione con le iscrizioni dell'utente
}

// Modello Evento per la gestione degli eventi
model Evento {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  titolo      String
  data        DateTime
  descrizione String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  iscrizioni  Iscrizione[] // Relazione con le iscrizioni all'evento
}

// Modello Iscrizione per gestire le iscrizioni degli utenti agli eventi
model Iscrizione {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  userId            String    @db.ObjectId
  eventoId          String    @db.ObjectId
  checkinEffettuato Boolean   @default(false)
  oraCheckin        DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relazioni
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  evento            Evento    @relation(fields: [eventoId], references: [id], onDelete: Cascade)
  
  // Indici
  @@unique([userId, eventoId]) // Un utente può iscriversi una sola volta a un evento
}
